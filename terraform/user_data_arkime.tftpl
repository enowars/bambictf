#!/bin/bash
set -e

# TODO make this reboot-safe
iptables -A INPUT -i br-+ -p tcp -m tcp --dport 9200 -j ACCEPT

# Network
mv "/etc/wireguard/arkime${id}.conf" "/etc/wireguard/internal.conf"
sed -i -e "s#\[\[ENGINE_ADDRESS\]\]#${engine}#g" "/etc/wireguard/internal.conf"
sed -i -e "s#\[\[ELK_ADDRESS\]\]#${elk}#g" "/etc/wireguard/internal.conf"
%{ for router_index, router in router_ips ~}
  sed -i -e "s#\[\[ROUTER_ADDRESS_${router_index+1}\]\]#${router.ip_address}#g" "/etc/wireguard/internal.conf"
  sed -i -e "s#\[\[ROUTER_ADDRESS_${router_index+1}\]\]#${router.ip_address}#g" "/etc/wireguard/internal.conf"
%{ endfor ~}
systemctl enable --now "wg-quick@internal"

# Start elasticsearch cluster
sed -i -e "s#\[\[ARKIME\]\]#192.168.2.${id}#g" /services/BambiArkimeElasticsearch/docker-compose.yml
sed -i -e "s#\[\[INITIAL_MASTER_NODES\]\]#${masters}#g" /services/BambiArkimeElasticsearch/docker-compose.yml
sed -i -e "s#\[\[SEED_HOSTS\]\]#${seeds}#g" /services/BambiArkimeElasticsearch/docker-compose.yml
cd /services/BambiArkimeElasticsearch/
docker compose up -d

# Start Arkime cluster
sed -i -e "s#\[\[ARKIME\]\]#192.168.2.${id}#g" /services/BambiArkime/config.ini
sed -i -e "s#\[\[ARKIME\]\]#192.168.2.${id}#g" /services/BambiArkime/docker-entrypoint.sh
cd /services/BambiArkime/
docker compose build


if [ ${id} -eq 1 ]
then
  docker compose run --entrypoint="/opt/arkime/db/db.pl" arkime "http://192.168.2.${id}:9200" init
  docker compose run --entrypoint="/opt/arkime/bin/arkime_add_user.sh" arkime admin "Admin" admin --admin
  # TODO create marker
fi

# TODO wait for marker
#docker compose up -d
