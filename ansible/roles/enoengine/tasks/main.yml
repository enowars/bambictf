---
- name: Install docker dependencies
  apt:
    name: ["git"]
    state: present

- name: Clone EnoEngine
  git: # noqa: latest
    repo: "https://github.com/enowars/EnoEngine.git"
    dest: /services/EnoEngine

- name: Build EnoEngine
  shell: "dotnet build" # noqa: command-instead-of-shell
  args:
    chdir: /services/EnoEngine

- name: Start EnoEngine Postgres
  shell: "docker compose up -d" # noqa: command-instead-of-shell
  args:
    chdir: /services/EnoEngine

- name: Clone EnoCTFPortal (for adhoc testing and solutions)
  git: # noqa: latest
    repo: "https://github.com/enowars/EnoCTFPortal.git"
    dest: /services/EnoCTFPortal

- name: Copy EnoCTFPortal docker-compose.yml
  copy:
    src: docker-compose.yml
    dest: /services/EnoCTFPortal/
    mode: "0644"
  changed_when: false

- name: Start EnoCTFPortal
  shell: "docker compose up -d" # noqa: command-instead-of-shell
  args:
    chdir: /services/EnoCTFPortal

- name: Allow flag submission traffic
  iptables:
    chain: INPUT
    in_interface: internal
    protocol: tcp
    destination_port: "1337"
    jump: ACCEPT

- name: Allow EnoCTFPortal traffic
  iptables:
    chain: INPUT
    in_interface: internal
    protocol: tcp
    destination_port: "5001"
    jump: ACCEPT

- name: Allow wireguard input traffic (internal)
  iptables:
    chain: INPUT
    in_interface: eth0
    destination_port: "51821"
    protocol: udp
    jump: ACCEPT

- name: Persist iptables config
  include_role:
    name: "iptables_persistent"

- name: Create /services/data
  ansible.builtin.file:
    path: /services/data
    state: directory
    mode: "0755"

- name: Create logrotate rule for EnoEngine
  copy:
    dest: /etc/logrotate.d/enoengine
    owner: root
    group: root
    mode: '0644'
    content: |
      /services/data/EnoLauncher.log
      /services/data/EnoEngine.log
      /services/data/EnoLauncher.statistics.log
      /services/data/EnoEngine.statistics.log
      /services/data/EnoFlagSink.statistics.log
       {
          size 100M
          rotate 10
          missingok
          notifempty
          compress
          copytruncate
      }
